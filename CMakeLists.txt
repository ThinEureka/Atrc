CMAKE_MINIMUM_REQUIRED(VERSION 3.10)

IF(DEFINED ENV{VCPKG_ROOT} AND NOT DEFINED CMAKE_TOOLCHAIN_FILE)
  SET(CMAKE_TOOLCHAIN_FILE $ENV{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake CACHE STRING "")
ENDIF()

PROJECT(Atrc)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Bin/Lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Bin/Lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/Bin)

SET(CMAKE_INCLUDE_CURRENT_DIR ON)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/Source/Lib/Utils/Src/)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/Source/)

SET(CMAKE_CXX_STANDARD 17)

IF(MSVC)
    ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
ENDIF()

IF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++ -pthread")
    SET(STDFS_LD_LIB "c++fs")
ELSEIF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
    SET(STDFS_LD_LIB "stdc++fs")
ENDIF()

FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(glfw3 CONFIG REQUIRED)
FIND_PACKAGE(GLEW REQUIRED)
FIND_PACKAGE(ZLIB REQUIRED)

ADD_SUBDIRECTORY(Source/Lib/AGZUtils)
ADD_SUBDIRECTORY(Source/Lib/imgui)
ADD_SUBDIRECTORY(Source/Lib/cnpy)
	
ADD_SUBDIRECTORY(Source/Atrc/RHNNViewer)
